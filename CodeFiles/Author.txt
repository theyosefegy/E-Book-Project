package ebookstore1;


import ebookstore1.EBookStore1;
import ebookstore1.BlueprintClass;
import static ebookstore1.connection.Close;
import java.awt.Color;
import java.awt.Label;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;

public class Author extends BlueprintClass implements ActionListener {
    
    // TextFields
    TextField authorIdField = new TextField();
    TextField firstNameField = new TextField();
    TextField lastNameField = new TextField();
    
    
    // Labels
    Label authorIdLabel = new Label("Author ID:");
    Label firstNameLabel = new Label("First Name:");
    Label lastNameLabel = new Label("Last Name:");
    
    // giving the initial values  
    Author() {
        super("Nav","Publisher");
        setTitle("Author");
        
        authorIdField.setBounds(110, 120, 200, 30);
        firstNameField.setBounds(110, 190, 200, 30);
        lastNameField.setBounds(110, 260, 200, 30);

        authorIdLabel.setBounds(110, 90, 80, 30);
        firstNameLabel.setBounds(110, 160, 80, 30);
        lastNameLabel.setBounds(110, 230, 80, 30);

        authorIdLabel.setFont(myFont);
        firstNameLabel.setFont(myFont);
        lastNameLabel.setFont(myFont);

        authorIdLabel.setForeground(Color.WHITE);
        firstNameLabel.setForeground(Color.WHITE);
        lastNameLabel.setForeground(Color.WHITE);

        // ADD
        add(lastNameLabel);
        add(firstNameLabel);
        add(authorIdLabel);
        
        add(lastNameField);
        add(firstNameField);
        add(authorIdField);
        
        remove(backToNavBtn);

    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == closeBtn) {
                Close();
                System.exit(0);

        } else if (e.getSource() == nextBtn) {
            setVisible(false);
            dispose(); 
            new EBookStore1();
            
        } else if (e.getSource() == preBtn) {
            setVisible(false);
            dispose(); 
            new Publisher();
            
        } else if (e.getSource() == clearBtn){
            lastNameField.setText(""); 
            firstNameField.setText(""); 
            authorIdField.setText(""); // int 
            
        } 
        
          else if (e.getSource() == insertBtn){
            String firstName = firstNameField.getText();// string
            String lastName = lastNameField.getText();// string
            String authorid = authorIdField.getText(); // int 
            
            String sqlQuery = "INSERT INTO author (id, f_name, l_name) VALUES "+"("+authorid+",'"+firstName+"','"+lastName+"')";
            boolean result =  connection.executeQuary(sqlQuery);
            
            if(result){
              JOptionPane.showMessageDialog(null," Data Inserted ");
              logText += "New author inserted: " + firstName + " " + lastName + " (ID: " + authorid + ")\n";

             } else {
              JOptionPane.showMessageDialog(null," Something wrong happened while inserting the current data.");
            }


        } else if (e.getSource() == updateBtn){
            String firstName = firstNameField.getText();// string
            String lastName = lastNameField.getText();// string
            String authorid = authorIdField.getText(); // int 
            
            String sqlQuery = "UPDATE author SET f_name = '"+ firstName +"', l_name = '"+ lastName +"' WHERE author_id ="+authorid;

            boolean result =  connection.executeQuary(sqlQuery);
            
            if(result){
                JOptionPane.showMessageDialog(null," Data Updated ");
                logText += "Author updated: " + firstName + " " + lastName + " (ID: " + authorid + ")\n";

            } else {
                JOptionPane.showMessageDialog(null," Something wrong happened while updating the current data.");
            }


        } else if (e.getSource() == deleteBtn){
            String authorid = authorIdField.getText();
            
            lastNameField.setText("");
            firstNameField.setText("");
            authorIdField.setText("");

            String sqlQuery = "DELETE FROM author WHERE id = "+authorid;
            boolean result =  connection.executeQuary(sqlQuery);

            if(result){
                JOptionPane.showMessageDialog(null,"Data Deleted");
                logText += "Author deleted: ID " + authorid + "\n";
             } else {
                JOptionPane.showMessageDialog(null," Something wrong happened while deleting the current data. ");
            }

        }
    }
    
    
}
